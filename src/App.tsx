import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [news, setNews] = useState([]);
  const [editingId, setEditingId] = useState(null);
  const [formValues, setFormValues] = useState({ title: '', text: '' });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const saved = JSON.parse(localStorage.getItem('news')) || [];
    setNews(saved);
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ news
  useEffect(() => {
    localStorage.setItem('news', JSON.stringify(news));
  }, [news]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º—ã
  const handleChange = (e) => {
    setFormValues({
      ...formValues,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!formValues.title.trim() || !formValues.text.trim()) return;

    if (editingId) {
      setNews(news.map((item) => (item.id === editingId ? { ...item, ...formValues } : item)));
      setEditingId(null);
    } else {
      const newItem = {
        id: Date.now(),
        ...formValues,
      };
      setNews([newItem, ...news]);
    }
    setFormValues({ title: '', text: '' });
  };

  const handleEdit = (item) => {
    setEditingId(item.id);
    setFormValues({ title: item.title, text: item.text });
  };

  const handleDelete = (id) => {
    setNews(news.filter((item) => item.id !== id));
  };

  return (
    <div className="app">
      <h1>üìù –ù–æ–≤–æ—Å—Ç–∏</h1>
      <NewsForm
        formValues={formValues}
        handleChange={handleChange}
        handleSubmit={handleSubmit}
        isEditing={!!editingId}
      />
      <NewsList news={news} onEdit={handleEdit} onDelete={handleDelete} />
    </div>
  );
}

// –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function NewsForm({ formValues, handleChange, handleSubmit, isEditing }) {
  return (
    <form onSubmit={handleSubmit} className="news-form">
      <input
        type="text"
        name="title"
        placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫"
        value={formValues.title}
        onChange={handleChange}
        required
      />
      <textarea
        name="text"
        placeholder="–¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏"
        value={formValues.text}
        onChange={handleChange}
        required
      />
      <button type="submit">{isEditing ? '–û–±–Ω–æ–≤–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}</button>
    </form>
  );
}

// –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
function NewsList({ news, onEdit, onDelete }) {
  return (
    <ul className="news-list">
      {news.length === 0 && <p>–ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>}
      {news.map((item) => (
        <li key={item.id} className="news-item">
          <h3>{item.title}</h3>
          <p>{item.text}</p>
          <div className="news-actions">
            <button onClick={() => onEdit(item)}>‚úèÔ∏è</button>
            <button onClick={() => onDelete(item.id)}>üóëÔ∏è</button>
          </div>
        </li>
      ))}
    </ul>
  );
}

export default App;
